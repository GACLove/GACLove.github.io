{"meta":{"title":"Hexo","subtitle":"","description":"","author":"gaopeng","url":"http://gaclove.github.io","root":"/"},"pages":[{"title":"404","date":"2022-12-31T16:00:00.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"404/index.html","permalink":"http://gaclove.github.io/404/index.html","excerpt":"","text":""},{"title":"about","date":"2023-01-31T03:14:29.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"about/index.html","permalink":"http://gaclove.github.io/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2023-01-31T03:18:50.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"archives/index.html","permalink":"http://gaclove.github.io/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-01-31T03:21:29.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"categories/index.html","permalink":"http://gaclove.github.io/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2023-01-31T03:15:30.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"contact/index.html","permalink":"http://gaclove.github.io/contact/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-01-31T03:13:31.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"tags/index.html","permalink":"http://gaclove.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"GCC常用选项","slug":"GCC常用选项","date":"2018-04-30T12:28:18.000Z","updated":"2023-01-31T07:52:08.463Z","comments":true,"path":"GCC常用选项/","link":"","permalink":"http://gaclove.github.io/GCC%E5%B8%B8%E7%94%A8%E9%80%89%E9%A1%B9/","excerpt":"","text":"命令常用 Gcc 命令本身就有很多可以使用文档， 如果对编译和链接过程需要有详细控制的，可以细看 gcc 文档 gcc -dumpmachine # 打印当前机器信息, 示例： # output: x86_64-linux-gnu gcc -print-search-dirs # 打印搜索路径 gcc --help&#x3D;target # 可以查看可以详细控制的选项 # 查看当前C++编译器 ABI 兼容问题, 参考： # https:&#x2F;&#x2F;gcc.gnu.org&#x2F;onlinedocs&#x2F;libstdc++&#x2F;manual&#x2F;using_dual_abi.html echo &#39;#include &lt;string&gt; &#39; | g++ -dM -E -x c++ - | grep _GLIBCXX_USE_CXX11_ABI # 查看当前C++编译器是否支持symbol version # https:&#x2F;&#x2F;refspecs.linuxfoundation.org&#x2F;LSB_3.0.0&#x2F;LSB-PDA&#x2F;LSB-PDA.junk&#x2F;symversion.html echo &#39;#include &lt;string&gt; &#39; | g++ -dM -E -x c++ - | grep _GLIBCXX_SYMVER 编译常见 安全相关的编译选项 在编译器层面，gcc提供了不少安全方面的编译选项，主要有： # NX(DEP) -z execstack # 禁用NX保护 -z noexecstack # 开启NX保护| 堆栈禁止执行 # RELRO -z norelro # 关闭 -z lazy # 部分开启 -z now # 全部开启| GOT写保护 # CANARY -fno -stack-protector # 禁用 -fstack-protector # 开启 -fstack-protector-all # 完全开启| 堆栈溢出哨兵 # FORTIFY -D_FORTIFY_SOURCE &#x3D;1 # 较弱的检查 -D_FORTIFY_SOURCE&#x3D;2 # 较强的检查| 常用函数加强检查 # PIE(ASLR) -fpie -pie # 开启PIE，此时强度为1 -fPIE -pie # 开启PIE，此时为最高强度2| 代码段、数据段地址随机化 Ref Gcc 安全编译选项","categories":[{"name":"GCC","slug":"GCC","permalink":"http://gaclove.github.io/categories/GCC/"}],"tags":[{"name":"Linux GCC","slug":"Linux-GCC","permalink":"http://gaclove.github.io/tags/Linux-GCC/"}]}],"categories":[{"name":"GCC","slug":"GCC","permalink":"http://gaclove.github.io/categories/GCC/"}],"tags":[{"name":"Linux GCC","slug":"Linux-GCC","permalink":"http://gaclove.github.io/tags/Linux-GCC/"}]}